I"<h2 id="接口测试-自定义函数">接口测试-自定义函数</h2>

<h3 id="使用简介">使用简介：</h3>

<p>自定义函数拓展性很强，在 测试数据、参数校验，测试前置、测试后置 、MockService中有广泛用途，执行操作挥着返回对应的变量值。</p>

<p>具体方法实现可以参考自定义函数明细</p>

<h4 id="变量引用方式">变量引用方式：</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$key
</code></pre></div></div>

<h4 id="自定义函数引用方式-">自定义函数引用方式 :</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>${function_name(key1,key2)}
</code></pre></div></div>

<p><img src="https://james-xuande.github.io/images/posts/2021-04-18/image-function-use.png" alt="" /></p>

<h3 id="维护自定义函数">维护自定义函数</h3>

<p><img src="https://james-xuande.github.io/images/posts/2021-04-18/config-function.png" alt="" /></p>

<h3 id="常用函数">常用函数</h3>

<h4 id="查询数据库">查询数据库</h4>

<p>使用场景: 数据库增删改查</p>

<table>
  <thead>
    <tr>
      <th>${select_common($urm_db_url, $sql, oracle, 0, AT_START_dt)}</th>
      <th>select方法使用,row是游标从0开始</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>${select_common($urm_db_url, $sql, oracle)}</td>
      <td>insert、update、delete使用</td>
    </tr>
    <tr>
      <td>${setup($urm_db_url,$sql,oracle,insert,$result)}</td>
      <td>如果查询没有结果就插入，删除如果存在就删除</td>
    </tr>
  </tbody>
</table>

<h4 id="时间获取类">时间获取类</h4>

<p>使用场景: 交易日期加减</p>

<table>
  <thead>
    <tr>
      <th>get_date_Y_m_d()</th>
      <th>获取年月日</th>
      <th>2021-04-17</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>get_date_H_M_S()</td>
      <td>获取时分秒</td>
      <td>23:15:01</td>
    </tr>
    <tr>
      <td>get_date_Y_m_d_H_M_S()</td>
      <td>获取年月日时分秒</td>
      <td>2021-04-17 23:15:01</td>
    </tr>
    <tr>
      <td>get_date_Ymd()</td>
      <td>获取年月日</td>
      <td>2021-04-17</td>
    </tr>
    <tr>
      <td>add_date(input, times)</td>
      <td>日期相加</td>
      <td>input: 2021-04-17 times=1  ==&gt; output:2021-04-18</td>
    </tr>
    <tr>
      <td>minus_date(input, times)</td>
      <td>日期相减</td>
      <td>input: 2021-04-17 times=1  ==&gt; output:2021-04-16</td>
    </tr>
  </tbody>
</table>

<h4 id="uuid类">UUID类</h4>

<p>使用场景: 请求参数生成唯一ID</p>

<table>
  <thead>
    <tr>
      <th>函数依赖包</th>
      <th>函数依赖包</th>
      <th>eg.示例</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>random_length_string(10)</td>
      <td>随机生成指定长度的字符串uuid</td>
      <td>qwertyuips</td>
    </tr>
  </tbody>
</table>

<h4 id="操作redis">操作redis</h4>

<table>
  <thead>
    <tr>
      <th>redis_str(nodes, method, key)</th>
      <th>操作redis数据库</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td> </td>
      <td> </td>
    </tr>
  </tbody>
</table>

<h4 id="生成证件号">生成证件号</h4>

<table>
  <thead>
    <tr>
      <th>createIdcard()</th>
      <th>生成身份证号</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>create_phone()</td>
      <td>生成手机号</td>
    </tr>
    <tr>
      <td>creste_bank_card(bank_name)</td>
      <td>生成农商或交通银行卡号</td>
    </tr>
  </tbody>
</table>

:ET